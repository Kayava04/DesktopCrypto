<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--// Border Dark Style \\-->
    <Style x:Key="BorderDarkStyle" TargetType="{x:Type Border}">

        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Background" Value="#272535"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

    </Style>

    <!--// Minimize Dark Button Style \\-->
    <Style x:Key="MinimizeDarkStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MinimizeLightStyle}">
        <Setter Property="Foreground" Value="#eff2f7"/>
    </Style>

    <!--// Close Dark Button Style \\-->
    <Style x:Key="CloseDarkStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CloseLightStyle}">
        <Setter Property="Foreground" Value="#eff2f7"/>
    </Style>

    <!--// Add Dark Button Style \\-->
    <Style x:Key="AddDarkStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AddLightStyle}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--// Tab Dark Button Style \\-->
    <Style x:Key="TabDarkStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TabLightStyle}">
        <Setter Property="Foreground" Value="#eff2f7"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#43A047"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#43A047"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Edit Dark Button Style \\-->
    <Style x:Key="EditDarkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource EditLightButtonStyle}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--// Remove Dark Button Style \\-->
    <Style x:Key="RemoveDarkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RemoveLightButtonStyle}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--// Back Dark Button Style \\-->
    <Style x:Key="BackDarkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BackLightButtonStyle}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--// Save Dark Button Style \\-->
    <Style x:Key="SaveDarkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SaveLightButtonStyle}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--// Migration Dark Button Style \\-->
    <Style x:Key="MigrationDarkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MigrationLightButtonStyle}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--// Remove Dark Migration Button Style \\-->
    <Style x:Key="RemoveDarkMigrationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RemoveLightMigrationButtonStyle}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

</ResourceDictionary>